github的一些操作
	star 收藏
	issue	事物卡片   发现代码bug，双方交流讨论的时候用（间接地聊天）
	
	fork  复制别人的仓库到自己的账户下（仓库独立）
		若果进行更改，可以给对方发送请求，让其决定是否进行合并更改
	pull request     发送请求
	watch 关注  项目更新时，会有消息通知
	
	觉得可以，进行合并

	在仓库页面下，t键快捷查询仓库

	设置权限

	将	[remote "origin"]
	
		url = https://github.com/用户名/仓库名.git
	改为 
		[remote "origin"]
	
		url = https://用户名:密码@github.com/用户名/仓库名.git

git add      从工作区到暂存区
git commit -m "描述"    从暂存区到仓库
git push origin dev 	

删除文件
rm  文件名  删除工作区文件
git rm 文件名  删除仓库中的文件
git commit -m  ""
git branch name		创建分支
 	git checkout name		切换分支

 	git checkout -b name	创建并切换

 	git branch  	查看当前的分支
 	git merge  name 	合并指定分支到当前分支
 	git branch -d  分支名  删除分支
 	出现冲突，可以手动解决后在提交


 	git merge --no-ff -m ’描述‘参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。

 ***	干活不在主分支上，都是合并到一个分支，最后合并到主分支

	修复bug时，可以建立新的bug分支来修复，然后合并，最后删除
	若工作没完成可以 git stash  隐藏工作区
	修复后			 git stash  回到工作现场   

	开发一个新feature（功能），最好新建一个分支；

	如果要丢弃一个没有被合并过的分支，可以通过git branch -D name强行删除。

多人合作
		克隆单个分支
		git clone -b <branch name> [remote repository address]


		1.git push origin branch name 推送自己的修改
		2.推送失败的话，需要先用git pull 试图合并
		3.如果还是不行，解决冲突，并在本地提交
		4.没有冲突或解决冲突，重复第一步

	注：如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，
	git branch --set-upstream branch-name origin/branch-name。

	git remote -v   查看远程库
	git checkout -b branch-name origin/branch-name  在本地创建的分支要和远程的分支一致
标签
	git tag name 新建标签  如v1.0
	git tag -a <tagname> -m "blablabla..."可以指定标签信息
	git tag -s <tagname> -m "blablabla..."可以用PGP签名标签
	命令git tag可以查看所有标


github搭建个人网站
	访问         https://用户名.github.io
	搭建步骤	
	1. 新建仓库  仓库名必须为【用户名.github.io】
	2.在仓库下创建index.php文件(只支持html静态文件)
	
    项目站点
	访问   	 https://用户名.github.io/仓库名
	1.进入项目主页 ,点击settings
	2.然后在seting中点击 Launch automatic 。。。 自动生成主页面
	3.新建站点信息基础
	4.选择主题
	5.生成网页